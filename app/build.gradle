plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'jacoco'
}



android {
    namespace 'com.music.topalbums'
    compileSdk 33

    defaultConfig {
        applicationId "com.music.topalbums"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner = "com.music.topalbums.HiltTestRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
            }
        }
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        test {
            resources.srcDirs += ['src/test/resources']
        }
        androidTest {
            resources.srcDirs += ['src/androidTest/resources']
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.test.espresso:espresso-contrib:3.5.1'

    testImplementation 'androidx.test.ext:junit:1.1.5'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation 'androidx.navigation:navigation-testing:2.5.3'
    androidTestImplementation "androidx.test:rules:1.5.0"
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'

    // Test Orchestrator
    androidTestUtil 'androidx.test:orchestrator:1.4.2'



    // NOTE: DO NOT CHANGE VERSIONS WITHOUT RUNNING .\gradlew connectedAndroidTest
    // https://stackoverflow.com/questions/74608921/android-studio-instrumented-test-stuck-at-task-appconnecteddebugandroidtest#answer-74955089
    // https://github.com/android/android-test/issues/1611#issuecomment-1344539995
    debugImplementation 'androidx.fragment:fragment-testing-manifest:1.6.0-alpha04'
    debugImplementation 'androidx.fragment:fragment-testing:1.6.0-alpha04'
    // *****************************************************************


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    debugImplementation "androidx.fragment:fragment-testing:1.5.7"


    implementation "androidx.paging:paging-runtime-ktx:3.2.0-alpha04"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'

    // Coroutines dependency
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'


    implementation 'com.github.bumptech.glide:glide:4.11.0'

    implementation 'com.hbb20:ccp:2.5.1'
    implementation 'com.github.pedromassango:doubleClick:3.0'

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-android-compiler:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    testImplementation  'com.google.dagger:hilt-android-testing:2.44'
    kaptTest 'com.google.dagger:hilt-android-compiler:2.44'
    kaptTest "com.google.dagger:hilt-compiler:2.44"


    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44'

    testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
    testImplementation 'org.mockito:mockito-inline:2.8.47'

    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.28.1'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}


task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
}